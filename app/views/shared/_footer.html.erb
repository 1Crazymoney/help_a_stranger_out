<div class="footer" style="text-align:center" id="footer">
  <!-- your footer content -->
</div>

<!-- google analytics -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  // your property code
  ga('create', 'UA-XXXXXXXXXX', 'auto');
  ga('send', 'pageview');
</script>

<script src="https://cdn.orangecss.com/1.0.0/js/orange.min.js"></script>

<script type="text/javascript">


  var Deed = {
    init: function(data) {
      this.id = data.id;
      this.title = data.title;
      this.description = data.description;
      this.thumbnail = data.thumbnail;
      return this;
    }
  }

  var TemplateManager = {

  }

// For local storage and database
  var DeedManager = {
    create: function(data) {
      $.ajax({
        url: '/deeds',
        type: 'post',
        dataType: 'json',
        data: data,
        success: function(json) {
          DeedManager.addDeed(json);
          window.location.pathname = '/profile'
        }
      });
    },
    get: function(id, callback) {
      $.ajax({
        url: '/deeds/' + id,
        type: 'get',
        dataType: 'json',
        success: function(json) {
          callback(json);
        }
      });
    },
    update: function(data, id, callback) {
      $.ajax({
        url: '/deeds/' + id,
        type: 'put',
        dataType: 'json',
        data: data,
        success: function(json) {
          callback(data, id);
          TemplateManager.renderWithActiveSideNav(due_date);
        }
      });
    },
    delete: function(el) {
      var id = $(el).parents('tr').attr('data-id');
      var self = this;
      $.ajax({
        url: '/deeds/' + id,
        type: 'delete',
        success: function() {
          self.list.delete(id);
          TemplateManager.renderTemplate();
        }
      });
    },
    addDeed: function(data) {
      var deed = Object.create(Deed);
      deed.init(data);
      this.list.add(deed);
    },
    init: function() {
      var deedList = Object.create(DeedList);
      this.list = deedList.init();
      return this;
    }
  }

  var DeedList = {
    add: function(deed) {
      this.all.push(deed);
      DeedBlockstackManager.add(deed);
    },
    delete: function(id) {
      var self = this;
      this.all.forEach(function(deed, idx) {
        if (deed.id === parseInt(id, 10)) {
          self.all.splice(idx, 1);
        }
      });
    },
    findById: function(id) {
      return this.all.find(function(deed, idx) {
        return id == deed.id;
      });
    },
    update: function(data, id) {
      var deed = this.findById(id);
      deed.title = data.title;
      deed.description = data.description;
      deed.thumbnail = data.thumbnail;
    },
    all: [],
    init: function() {
      return this;
    }
  }

  // For BLockstack storage
  var DeedBlockstackManager = {
    init: function() {
      this.getDeedList();
      return this;
    },
    all: [],
    path: 'deeds',
    getDeedList: function() {
      BlockstackManager.getFile(this.path, this.getCallback.bind(this));
    },
    getCallback: function(file) {
      if (file !== null) {
        this.all = JSON.parse(file);
      }
    },
    add: function(deed) {
      this.all.push(deed);
      this.pushDeedList();
    },
    pushDeedList: function() {
      BlockstackManager.putFile(this.path, this.all, this.pushCallback.bind(this));
    },
    pushCallback: function() {
      alert('Updated your deeds list!');
    }
  }

  var BlockstackManager = {
    init: function(session) {
      this.session = session;
      this.userData = session.loadUserData();
      return this;
    },
    getOpts: function() {
      return {decrypt: this.userData.appPrivateKey, verify: true}
    },
    putOpts: function() {
      return {'Content-Type': 'string', sign: this.userData.appPrivateKey}
    },
    getFile: function(path, callback) {
      this.session.getFile(path, this.getOpts()).then((file) => {
        callback(file);
      });
    },
    putFile: function(path, file, callback) {
      this.session.putFile(path, JSON.stringify(file), this.putOpts()).then((data) => {
        callback();
      });
    }
  }

  // TemplateManager.init();
  // DeedManager.init();
  BlockstackManager.init(blockstackSession);
  DeedManager.init();
  DeedBlockstackManager.init();


</script>
